<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VisualHFT.View"
             xmlns:my="clr-namespace:VisualHFT.Helpers"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
            xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
            xmlns:Formatters="clr-namespace:VisualHFT.Converters"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            x:Class="VisualHFT.View.ucPositions"
             mc:Ignorable="d" 
    
        xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="15"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"                      

    d:DesignHeight="300" d:DesignWidth="900">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../GlobalStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <my:PnLStyle x:Key="PnLStyle">
                <my:PnLStyle.GreenBackColorStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="Background" Value="DarkGreen"/>
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </my:PnLStyle.GreenBackColorStyle>
                <my:PnLStyle.RedBackColorStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="Background" Value="DarkRed" />
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </my:PnLStyle.RedBackColorStyle>
                <my:PnLStyle.NullBackColorStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="DarkGray"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </my:PnLStyle.NullBackColorStyle>
            </my:PnLStyle>

            
            <Formatters:ConverterEnum x:Key="enumConverter"/>
            <Formatters:KiloFormatter x:Key="KiloFormatter"/>
            <CollectionViewSource Source="{Binding Positions}" x:Key="PositionsSorted">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="CloseTimeStamp" Direction="Descending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource Source="{Binding Executions}" x:Key="ExecutionsSorted">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="LocalTimeStamp" Direction="Descending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            
        </Grid.Resources>

        <GroupBox Header="Positions" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5" Padding="5">
            <Grid>
                <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <TabItem Header="Executions" IsSelected="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>                            
                            <!--EXECUTIONS-->
                            <DataGrid x:Name="grdExecutions" Style="{DynamicResource MaterialDesignDataGrid}" AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource ExecutionsSorted}}" CanUserDeleteRows="False" CanUserAddRows="False" ClipboardCopyMode="IncludeHeader"  HeadersVisibility="Column"  AlternatingRowBackground="Gray" RowBackground="LightGray" IsReadOnly="True" BorderThickness="0" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserResizeRows="False" CanUserSortColumns="True" HorizontalScrollBarVisibility="Hidden" >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Date" Binding="{Binding LocalTimeStamp, StringFormat='{}{0:HH:mm:ss.fff}'}" Width="120" SortDirection="Descending" SortMemberPath="LocalTimeStamp" />
                                    <DataGridTextColumn Header="Provider" Binding="{Binding ProviderName}" Width="100"  />
                                    <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="100"  />
                                    <DataGridTextColumn Header="ClOrdId" Binding="{Binding ClOrdId}" Width="250"  />
                                    <DataGridTextColumn Header="Execution ID" Binding="{Binding ExecId}" Width="80"  />
                                    <DataGridTextColumn Header="Side" Binding="{Binding Side, Converter={StaticResource ResourceKey=enumConverter}}" Width="80"  />
                                    <DataGridTextColumn Header="Status" Binding="{Binding Status, Converter={StaticResource ResourceKey=enumConverter}}" Width="80"  />
                                    <DataGridTextColumn Header="QtyFilled" Binding="{Binding QtyFilled, Converter={StaticResource KiloFormatter}}" Width="100" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                    <DataGridTextColumn Header="Price" Binding="{Binding Price}" Width="120" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                    <DataGridTextColumn Header="Srv/Loc Latency(ms)" Binding="{Binding LatencyInMiliseconds, StringFormat=N2}" Width="*" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                </DataGrid.Columns>
                            </DataGrid>
                            <!--END EXECUTIONS-->
                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10 0 0 0">
                                <!--EXPOSURES-->
                                <GroupBox Header="Exposures" Height="245" Style="{DynamicResource MaterialDesignDataGroupBox}">
                                    <Grid>
                                        <DataGrid Style="{DynamicResource MaterialDesignDataGrid}" ItemsSource="{Binding Exposures}" MinRowHeight="40" FontSize="20" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserDeleteRows="False" CanUserAddRows="False" ClipboardCopyMode="IncludeHeader"  HeadersVisibility="Column"  IsReadOnly="True" BorderThickness="0" CanUserResizeRows="False" CanUserSortColumns="True" >
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">
                                                    <Style.Triggers>
                                                        <!--white-->
                                                        <DataTrigger Binding="{Binding ExposureRowColor}" Value="White">
                                                            <Setter Property="Background" Value="White" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </DataTrigger>
                                                        <!--red-->
                                                        <DataTrigger Binding="{Binding ExposureRowColor}" Value="Red">
                                                            <Setter Property="Background" Value="Red" />
                                                        </DataTrigger>
                                                        <!--white-->
                                                        <DataTrigger Binding="{Binding ExposureRowColor}" Value="Green">
                                                            <Setter Property="Background" Value="Green" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="*"  />
                                                <DataGridTextColumn Header="Size" Binding="{Binding SizeExposed, Converter={StaticResource KiloFormatter}}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                                <DataGridTextColumn Header="$ uPL" Binding="{Binding UnrealizedPL, StringFormat=N2}" Width="150" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </GroupBox>
                                <!--END EXPOSURES-->

                                <!--ACTIVE ORDERS-->
                                <GroupBox Header="Pending Orders" Height="250" Style="{DynamicResource MaterialDesignDataGroupBox}">
                                    <DataGrid Style="{DynamicResource MaterialDesignDataGrid}" ItemsSource="{Binding ActiveOrders}" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserDeleteRows="False" CanUserAddRows="False" ClipboardCopyMode="IncludeHeader"  HeadersVisibility="Column"  IsReadOnly="True" BorderThickness="0" CanUserResizeRows="False" CanUserSortColumns="True" >
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Provider" Binding="{Binding ProviderName}" Width="*" SortDirection="Ascending" />
                                            <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="100"  SortDirection="Ascending"/>
                                            <DataGridTextColumn Header="Side" Binding="{Binding Side}" Width="60" SortDirection="Ascending" />
                                            <DataGridTextColumn Header="Price" Binding="{Binding PricePlaced}" Width="100" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity, Converter={StaticResource KiloFormatter}}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                            <DataGridTextColumn Header="Filled" Binding="{Binding FilledQuantity, Converter={StaticResource KiloFormatter}}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                            <DataGridTextColumn Header="Pending" Binding="{Binding PendingQuantity, Converter={StaticResource KiloFormatter}}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                            <DataGridTextColumn Header="(sec ago)" Binding="{Binding PostedSecondsAgo, StringFormat=N0}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </GroupBox>
                                <!--END ACTIVE ORDERS-->
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Positions PnL">
                        <Grid>
                            <!--POSITIONS-->
                            <DataGrid x:Name="grdPositions" Grid.Column="0" ItemsSource="{Binding Source={StaticResource PositionsSorted}}" RowStyleSelector="{DynamicResource PnLStyle}" Style="{DynamicResource MaterialDesignDataGrid}" FontFamily="Arial" FontSize="11" RowHeight="30" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserDeleteRows="False" CanUserAddRows="False" ClipboardCopyMode="IncludeHeader"  HeadersVisibility="Column"  IsReadOnly="True" BorderThickness="0" CanUserResizeRows="False" CanUserSortColumns="True" >
                                <DataGrid.Resources>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding CreationTimeStamp, StringFormat='{}{0:HH:mm:ss.fff}'}" Header="Open" Width="100" />
                                    <DataGridTextColumn Binding="{Binding CloseTimeStamp, StringFormat='{}{0:HH:mm:ss.fff}'}" Header="Close" Width="100" />
                                    <DataGridTextColumn Binding="{Binding OpenProviderName}" Header="Open Provider" Width="120" />
                                    <DataGridTextColumn Binding="{Binding CloseProviderName}" Header="Close Provider" Width="120" />
                                    <DataGridTextColumn Binding="{Binding StrategyCode}" Header="Strategy" Width="100" />
                                    <DataGridTextColumn Binding="{Binding Symbol}" Header="Symbol" Width="100" />
                                    <DataGridTextColumn Binding="{Binding Side, Converter={StaticResource ResourceKey=enumConverter}}" Header="Side" Width="70"  />
                                    <DataGridTextColumn Binding="{Binding OrderQuantity, Converter={StaticResource KiloFormatter}}" Header="Quantity" Width="100" ElementStyle="{DynamicResource RightAligned}" HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding GetOpenAvgPrice}" Header="Avg Open $" Width="100" ElementStyle="{DynamicResource RightAligned}" HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding GetCloseAvgPrice}" Header="Avg Close $" Width="100" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding IsCloseMM}" Header="IsMM" Width="60" ElementStyle="{DynamicResource CenterAligned}"  />
                                    <DataGridTextColumn Binding="{Binding AttemptsToClose}" Header="Attmpts" Width="40" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding MaxDrowdown, StringFormat=N2}" Header="Max DD" Width="100" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding UnrealizedPnL, StringFormat=N2}" Header="UpnL" Width="100" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding GetPipsPnL, StringFormat=N2}" Header="PnL (pips)" Width="100" ElementStyle="{DynamicResource RightAligned}" HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                    <DataGridTextColumn Binding="{Binding PipsPnLInCurrency, StringFormat=C2}" Header="PnL $" Width="*" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <!--END POSITIONS-->
                        </Grid>
                    </TabItem>

                </TabControl>
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Orientation="Horizontal" >
                    <Label Content="Session Date"></Label>
                    <DatePicker  SelectedDate="{Binding SelectedDate}" />
                    <telerik:RadButton x:Name="butExportCsv" ToolTip="Export Bottler..." Click="butExportCsv_Click" Width="20" Height="20" Padding="0" BorderThickness="0" Background="White">
                        <StackPanel Orientation="Horizontal" Margin="0" >
                            <Image Source="/Images/excel.png" Height="20" Width="20" ></Image>
                        </StackPanel>
                    </telerik:RadButton>
                </StackPanel>


                <Button x:Name="butLoadFile" Content="L" Visibility="Hidden" ToolTip="Load file..." HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,39,0" Width="30" Height="19" Click="butLoadFile_Click"/>
                <Button x:Name="butSaveFile" Content="S" Visibility="Hidden" ToolTip="Save file..." HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,5,0" Width="30" Height="19" Click="butSaveFile_Click"/>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
